//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.ServiceReferenceHafalup {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<WpfClient.ServiceReferenceHafalup.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : WpfClient.ServiceReferenceHafalup.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BeliverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesieseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MarriedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.ServiceReferenceHafalup.Religion MyReligionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BDay {
            get {
                return this.BDayField;
            }
            set {
                if ((this.BDayField.Equals(value) != true)) {
                    this.BDayField = value;
                    this.RaisePropertyChanged("BDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Beliver {
            get {
                return this.BeliverField;
            }
            set {
                if ((this.BeliverField.Equals(value) != true)) {
                    this.BeliverField = value;
                    this.RaisePropertyChanged("Beliver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Child {
            get {
                return this.ChildField;
            }
            set {
                if ((this.ChildField.Equals(value) != true)) {
                    this.ChildField = value;
                    this.RaisePropertyChanged("Child");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desiese {
            get {
                return this.DesieseField;
            }
            set {
                if ((object.ReferenceEquals(this.DesieseField, value) != true)) {
                    this.DesieseField = value;
                    this.RaisePropertyChanged("Desiese");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Married {
            get {
                return this.MarriedField;
            }
            set {
                if ((this.MarriedField.Equals(value) != true)) {
                    this.MarriedField = value;
                    this.RaisePropertyChanged("Married");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.ServiceReferenceHafalup.Religion MyReligion {
            get {
                return this.MyReligionField;
            }
            set {
                if ((object.ReferenceEquals(this.MyReligionField, value) != true)) {
                    this.MyReligionField = value;
                    this.RaisePropertyChanged("MyReligion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceHafalup.Religion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceHafalup.Propertise))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceHafalup.Category))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceHafalup.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Religion", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Religion : WpfClient.ServiceReferenceHafalup.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReligionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReligionName {
            get {
                return this.ReligionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReligionNameField, value) != true)) {
                    this.ReligionNameField = value;
                    this.RaisePropertyChanged("ReligionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Propertise", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Propertise : WpfClient.ServiceReferenceHafalup.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.ServiceReferenceHafalup.Category PropCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.ServiceReferenceHafalup.Category PropCategory {
            get {
                return this.PropCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.PropCategoryField, value) != true)) {
                    this.PropCategoryField = value;
                    this.RaisePropertyChanged("PropCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropName {
            get {
                return this.PropNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropNameField, value) != true)) {
                    this.PropNameField = value;
                    this.RaisePropertyChanged("PropName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Category : WpfClient.ServiceReferenceHafalup.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReligionList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Religion")]
    [System.SerializableAttribute()]
    public class ReligionList : System.Collections.Generic.List<WpfClient.ServiceReferenceHafalup.Religion> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PropertiseList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Propertise")]
    [System.SerializableAttribute()]
    public class PropertiseList : System.Collections.Generic.List<WpfClient.ServiceReferenceHafalup.Propertise> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CategoryList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Category")]
    [System.SerializableAttribute()]
    public class CategoryList : System.Collections.Generic.List<WpfClient.ServiceReferenceHafalup.Category> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceHafalup.IServiceMatch")]
    public interface IServiceMatch {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/GetAllUsers", ReplyAction="http://tempuri.org/IServiceMatch/GetAllUsersResponse")]
        WpfClient.ServiceReferenceHafalup.UserList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/GetAllUsers", ReplyAction="http://tempuri.org/IServiceMatch/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertUser", ReplyAction="http://tempuri.org/IServiceMatch/InsertUserResponse")]
        int InsertUser(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertUser", ReplyAction="http://tempuri.org/IServiceMatch/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateUser", ReplyAction="http://tempuri.org/IServiceMatch/UpdateUserResponse")]
        int UpdateUser(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateUser", ReplyAction="http://tempuri.org/IServiceMatch/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetUser", ReplyAction="http://tempuri.org/IServiceMatch/DeletetUserResponse")]
        int DeletetUser(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetUser", ReplyAction="http://tempuri.org/IServiceMatch/DeletetUserResponse")]
        System.Threading.Tasks.Task<int> DeletetUserAsync(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/Login", ReplyAction="http://tempuri.org/IServiceMatch/LoginResponse")]
        WpfClient.ServiceReferenceHafalup.User Login(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/Login", ReplyAction="http://tempuri.org/IServiceMatch/LoginResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.User> LoginAsync(WpfClient.ServiceReferenceHafalup.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/IsUsernameFree", ReplyAction="http://tempuri.org/IServiceMatch/IsUsernameFreeResponse")]
        bool IsUsernameFree(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/IsUsernameFree", ReplyAction="http://tempuri.org/IServiceMatch/IsUsernameFreeResponse")]
        System.Threading.Tasks.Task<bool> IsUsernameFreeAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertReligion", ReplyAction="http://tempuri.org/IServiceMatch/InsertReligionResponse")]
        int InsertReligion(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertReligion", ReplyAction="http://tempuri.org/IServiceMatch/InsertReligionResponse")]
        System.Threading.Tasks.Task<int> InsertReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateReligion", ReplyAction="http://tempuri.org/IServiceMatch/UpdateReligionResponse")]
        int UpdateReligion(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateReligion", ReplyAction="http://tempuri.org/IServiceMatch/UpdateReligionResponse")]
        System.Threading.Tasks.Task<int> UpdateReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetReligion", ReplyAction="http://tempuri.org/IServiceMatch/DeletetReligionResponse")]
        int DeletetReligion(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetReligion", ReplyAction="http://tempuri.org/IServiceMatch/DeletetReligionResponse")]
        System.Threading.Tasks.Task<int> DeletetReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllReligions", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllReligionsResponse")]
        WpfClient.ServiceReferenceHafalup.ReligionList SelectAllReligions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllReligions", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllReligionsResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.ReligionList> SelectAllReligionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertPropertise", ReplyAction="http://tempuri.org/IServiceMatch/InsertPropertiseResponse")]
        int InsertPropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertPropertise", ReplyAction="http://tempuri.org/IServiceMatch/InsertPropertiseResponse")]
        System.Threading.Tasks.Task<int> InsertPropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdatePropertise", ReplyAction="http://tempuri.org/IServiceMatch/UpdatePropertiseResponse")]
        int UpdatePropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdatePropertise", ReplyAction="http://tempuri.org/IServiceMatch/UpdatePropertiseResponse")]
        System.Threading.Tasks.Task<int> UpdatePropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetPropertise", ReplyAction="http://tempuri.org/IServiceMatch/DeletetPropertiseResponse")]
        int DeletetPropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetPropertise", ReplyAction="http://tempuri.org/IServiceMatch/DeletetPropertiseResponse")]
        System.Threading.Tasks.Task<int> DeletetPropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllPropertise", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllPropertiseResponse")]
        WpfClient.ServiceReferenceHafalup.PropertiseList SelectAllPropertise();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllPropertise", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllPropertiseResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.PropertiseList> SelectAllPropertiseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertCategory", ReplyAction="http://tempuri.org/IServiceMatch/InsertCategoryResponse")]
        int InsertCategory(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/InsertCategory", ReplyAction="http://tempuri.org/IServiceMatch/InsertCategoryResponse")]
        System.Threading.Tasks.Task<int> InsertCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateCategory", ReplyAction="http://tempuri.org/IServiceMatch/UpdateCategoryResponse")]
        int UpdateCategory(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/UpdateCategory", ReplyAction="http://tempuri.org/IServiceMatch/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<int> UpdateCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetCategory", ReplyAction="http://tempuri.org/IServiceMatch/DeletetCategoryResponse")]
        int DeletetCategory(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/DeletetCategory", ReplyAction="http://tempuri.org/IServiceMatch/DeletetCategoryResponse")]
        System.Threading.Tasks.Task<int> DeletetCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllCategories", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllCategoriesResponse")]
        WpfClient.ServiceReferenceHafalup.CategoryList SelectAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMatch/SelectAllCategories", ReplyAction="http://tempuri.org/IServiceMatch/SelectAllCategoriesResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.CategoryList> SelectAllCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMatchChannel : WpfClient.ServiceReferenceHafalup.IServiceMatch, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMatchClient : System.ServiceModel.ClientBase<WpfClient.ServiceReferenceHafalup.IServiceMatch>, WpfClient.ServiceReferenceHafalup.IServiceMatch {
        
        public ServiceMatchClient() {
        }
        
        public ServiceMatchClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMatchClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMatchClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMatchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfClient.ServiceReferenceHafalup.UserList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.UserList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int InsertUser(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public int UpdateUser(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeletetUser(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.DeletetUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeletetUserAsync(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.DeletetUserAsync(user);
        }
        
        public WpfClient.ServiceReferenceHafalup.User Login(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.User> LoginAsync(WpfClient.ServiceReferenceHafalup.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool IsUsernameFree(string username) {
            return base.Channel.IsUsernameFree(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUsernameFreeAsync(string username) {
            return base.Channel.IsUsernameFreeAsync(username);
        }
        
        public int InsertReligion(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.InsertReligion(religen);
        }
        
        public System.Threading.Tasks.Task<int> InsertReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.InsertReligionAsync(religen);
        }
        
        public int UpdateReligion(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.UpdateReligion(religen);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.UpdateReligionAsync(religen);
        }
        
        public int DeletetReligion(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.DeletetReligion(religen);
        }
        
        public System.Threading.Tasks.Task<int> DeletetReligionAsync(WpfClient.ServiceReferenceHafalup.Religion religen) {
            return base.Channel.DeletetReligionAsync(religen);
        }
        
        public WpfClient.ServiceReferenceHafalup.ReligionList SelectAllReligions() {
            return base.Channel.SelectAllReligions();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.ReligionList> SelectAllReligionsAsync() {
            return base.Channel.SelectAllReligionsAsync();
        }
        
        public int InsertPropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.InsertPropertise(propertise);
        }
        
        public System.Threading.Tasks.Task<int> InsertPropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.InsertPropertiseAsync(propertise);
        }
        
        public int UpdatePropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.UpdatePropertise(propertise);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.UpdatePropertiseAsync(propertise);
        }
        
        public int DeletetPropertise(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.DeletetPropertise(propertise);
        }
        
        public System.Threading.Tasks.Task<int> DeletetPropertiseAsync(WpfClient.ServiceReferenceHafalup.Propertise propertise) {
            return base.Channel.DeletetPropertiseAsync(propertise);
        }
        
        public WpfClient.ServiceReferenceHafalup.PropertiseList SelectAllPropertise() {
            return base.Channel.SelectAllPropertise();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.PropertiseList> SelectAllPropertiseAsync() {
            return base.Channel.SelectAllPropertiseAsync();
        }
        
        public int InsertCategory(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.InsertCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> InsertCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.InsertCategoryAsync(category);
        }
        
        public int UpdateCategory(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public int DeletetCategory(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.DeletetCategory(category);
        }
        
        public System.Threading.Tasks.Task<int> DeletetCategoryAsync(WpfClient.ServiceReferenceHafalup.Category category) {
            return base.Channel.DeletetCategoryAsync(category);
        }
        
        public WpfClient.ServiceReferenceHafalup.CategoryList SelectAllCategories() {
            return base.Channel.SelectAllCategories();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceHafalup.CategoryList> SelectAllCategoriesAsync() {
            return base.Channel.SelectAllCategoriesAsync();
        }
    }
}
